#!/command/with-contenv bash
# SPDX-FileCopyrightText: Â© 2025 Nfrastack <code@nfrastack.com>
#
# SPDX-License-Identifier: MIT

source /container/base/functions/container/init
prepare_service
SERVICE_NAME="restic"

restic_setup_container_mode
restic_bootstrap_filesystem

    if var_true "${ENABLE_BACKUP}" ; then
        print_debug "Configuring Backup"
        restic_create_schedulers backup
        if var_true "${BACKUP_ON_STARTUP}" ; then
            print_notice "Backing up on Startup"
            backup-now manual
        fi
    fi

    if var_true "${ENABLE_CHECK}" ; then
        print_debug "Configuring Check"
        restic_create_schedulers check
        if var_true "${CHECK_ON_STARTUP}" ; then
            print_notice "Checking on Startup"
            check-now manual
        fi
    fi

    if var_true "${ENABLE_CLEANUP}" ; then
        print_debug "Configuring Cleanup"
        restic_create_schedulers cleanup
        if var_true "${CLEANUP_ON_STARTUP}" ; then
            print_notice "Checking on Startup"
            cleanup-now manual
        fi
    fi

    if var_true "${ENABLE_INVENTORY}" ; then
        print_debug "Configuring Inventory"
        restic_create_schedulers inventory
    fi

    if var_true "${ENABLE_PRUNE}" ; then
        print_debug "Configuring Prune"
        restic_create_schedulers prune
        if var_true "${PRUNE_ON_STARTUP}" ; then
            print_notice "Pruning on Startup"
            prune-now manual
        fi
    fi

    if var_true "${ENABLE_SERVER}" ; then
        print_debug "Configuring Repository Server"
        restic_repository server
        if var_false "${ENABLE_NGINX}" ; then
            service_stop 10-nginx
            service_stop 11-nginx-config-reload
            rm -rf /etc/zabbix/zabbix_agentd.conf.d/nginx.conf
        fi
    else
        service_stop restic-rest-server
        service_stop 10-nginx
        service_stop 11-nginx-config-reload
        rm -rf /etc/zabbix/zabbix_agentd.conf.d/nginx.conf
    fi

    if var_true "${ENABLE_RCLONE}" ; then
        print_debug "Configuring RClone"
    else
        service_stop rclone
    fi

    if var_true "${ENABLE_STANDALONE}" ; then
        print_debug "Configuring Standlone"
        liftoff
        exit 0
    fi

    restic_create_schedulers init

liftoff
